@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model List<ProjectsAndCustomers.Models.Entities.ProjectEntity> // Make a list of the model


<h1>Projects</h1>
@* Button for opening the model which adds a project *@
@* <button id="addProjectBtn" onclick="openModal()">Add Project</button>> *@
<div style="display: flex; justify-content: space-between">
    <div>
    @* Buttons for fitlering depending on the start end enddate which signals if the project is complete or in progress *@
        <a href="#Foo" id="allProjectsBtn" onclick="filterProjects('all')">All Projects</a>
        <a href="#Foo" id="completedProjectsBtn" onclick="filterProjects('completed')">Completed Projects</a>
        <a href="#Foo" id="startedProjectsBtn" onclick="filterProjects('started')">Started Projects</a>
    </div>
    @* Shows add project button if user is logged in *@
    @if (User.Identity.IsAuthenticated)
    {
        <button class="btn btn-primary btn-lg active" id="addProjectBtn" onclick="openModal()">Add Project</button>

    }
</div>



<div id="projectsTable" style="display: flex; flex-wrap: wrap" class="projectsContainer">
        @foreach (var project in Model)
        {
        <div data-end-date="@project.EndDate" data-start-date="@project.StartDate" class="card shadow-lg" style="width: 300px; height: 200px; margin: 5px">
            <div style="display: flex; justify-content: space-between">
                <img src="/images/netimg.jpg" class="card-img-top" alt="Project Thumbnail" style="width: 50px; height: 50px; margin-left: 10px; margin-top: 10px;">
            <div>
                    <h5 class="card-title">@project.Title</h5>
                    <h5 class="card-title">@project.Customer.CustomerName</h5>
            </div>
                <div class="dropdown" style="margin-right: 10px; margin-top: 10px;">
                @* checks if user is logged in *@
                @if (User.Identity.IsAuthenticated)
                {
                    @* Button for dropdown *@
                    <button class="btn btn-secondary custom-dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                        ...
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <li>
                            <button class="dropdown-item" onclick="editProject(@project.Id)" data-project-id="@project.Id">Edit</button>
                        </li>
                        <li>
                            <button class="dropdown-item" onclick="deleteProject(@project.Id)" data-project-id="@project.Id">Delete</button>
                        </li>
                    </ul>
                }
            </div>
            </div>
            <div class="card-body">
   

                <p class="card-text">@project.Description</p>
            </div>

  
               

            </div>
        }
    </div>


@* <div id="modalContainer"></div> *@
<div id="modalWrapper">
    @* Inject form here *@
</div>

@* The reusable partial view that loads the modal, it sends the model to it, copilot helped me with the code for activating the modal. *@
@Html.Partial("_AddProjectModal", new ProjectsAndCustomers.Models.AddProjectViewModel())
@await Html.PartialAsync("_EditProjectModal", new ProjectsAndCustomers.Models.Entities.ProjectEntity())




@* Copilot helped me with ajax code for modals *@
<script>
    //Delete button
    function deleteProject(projectId) {
        console.log("Deleting project with ID:", projectId);

        fetch(`/Projects/Delete?id=${projectId}`, {
            method: 'POST'
        })
        .then(response => {
            if (response.ok) {
                console.log("Project deleted successfully.");
                location.reload(); // Reload the page to reflect changes
            } else {
                console.error("Failed to delete the project.");
            }
        })
        .catch(error => {
            console.error("Error:", error);
        });
    }



    // Code for opening the add project modal
    function openModal() {
        $('#addProjectModal').modal('show'); 
    }
        $(function() {
        $('.editModal').modal();
    });
    // Code for opening the edit modal
    function editProject(productId) {
        console.log("Product ID:", productId);
        $.ajax({
            url: '/Projects/Edit/' + productId, // sends id to cotnroller
            success: function(data) {
                $('#modalWrapper').html(data); // Injects the partial view
                $('#editProjectModal').modal('show'); // Activates the modal
            }
        });
    }
    // Code for sumbitting the edit modal
    $(document).on('submit', '#editProjectModal form', function(event) {
        event.preventDefault(); // Prevent default form submission
        let formData = $(this).serialize();

        $.ajax({
            type: 'POST',
            url: '/Projects/Edit',
            data: formData,
            success: function(response) {
                console.log('Edit successful!');
                $('#editProjectModal').modal('hide'); // Close the modal
                location.reload(); // Reload the page 
            },
            error: function(xhr, status, error) {
                console.error('Edit failed:', error);
            }
        });
    });
</script>



<script> // Function to get and check all rows, and compare it to todays date, and filter depending on the button. Copilot helped.
    function filterProjects(filter) {
        const today = new Date(); // Today's date
        const rows = document.querySelectorAll('.card'); // All table rows

        rows.forEach(row => {
            const endDateRaw = row.getAttribute('data-end-date'); // Get raw end date string
            const startDateRaw = row.getAttribute('data-start-date'); // Get raw start date string

            // Convert European format (DD/MM/YYYY HH:mm:ss) to ISO format (YYYY-MM-DDTHH:mm:ss), because the date in the model isn´t in the correct format to compare.
            const endDate = convertToISO(endDateRaw);
            const startDate = convertToISO(startDateRaw);

            // Ensure conversion worked before comparing dates
            if (endDate && startDate) {
                switch (filter) {
                    case 'all':
                        row.style.display = ''; // Show all rows
                        break;
                    case 'completed':
                        row.style.display = (endDate < today) ? '' : 'none'; // Show completed rows
                        break;
                    case 'started':
                        row.style.display = (endDate >= today) ? '' : 'none'; // Show started rows
                        break;
                    default:
                        row.style.display = ''; // Default to showing all rows
                }
            } else {
                console.error('Failed to parse date:', endDateRaw, startDateRaw);
                row.style.display = 'none'; // Hide rows with invalid date format
            }
        });
    }

    // Helper function to convert European date format to ISO format, used by the filter function.
    function convertToISO(dateString) {
        if (!dateString) return null;

        const parts = dateString.split(/[/ :]/); // Split the date by "/", " ", and ":"
        if (parts.length < 5) return null;

        const [day, month, year, hours, minutes, seconds] = parts;
        // Format as ISO (YYYY-MM-DDTHH:mm:ss), s o that it can be compared to todayss date.
        return new Date(`${year}-${month}-${day}T${hours}:${minutes}:${seconds}`);
    }
</script>


