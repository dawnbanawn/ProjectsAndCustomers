@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model List<ProjectsAndCustomers.Models.Entities.ProjectEntity> // Make a list of the model


<h1>Projects</h1>
@* Button for opening the model which adds a project *@
<button id="addProjectBtn" onclick="openModal()">Add Project</button>>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Description</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Budget</th>

            <th>Customer Name</th>

            <th></th>


        </tr>
    </thead>
    <tbody>
        @foreach (var project in Model){ // Loop through the list to show all projects
            <tr>
                <td>@project.Id</td>
                <td>@project.Title</td>
                <td>@project.Description</td>
                <td>@project.StartDate</td>
                <td>@project.EndDate</td>
                <td>@project.Budget</td>

                <td>@project.Customer.CustomerName</td>
                <td>
                    @* edit button that sends project id *@
                    <a asp-controller="Projects" asp-action="Edit" asp-route-id="@project.Id">Edit</a> 
                </td>

            </tr>
        }
    </tbody>

</table>
@* The reusable partial view that loads the modal, it sends the model to it, copilot helped me with the code for activating the modal. *@
@Html.Partial("_AddProjectModal", new ProjectsAndCustomers.Models.AddProjectViewModel())
<script>
    function openModal() {
        $('#addProjectModal').modal('show'); 
    }
</script>
