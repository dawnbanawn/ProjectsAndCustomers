@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model List<ProjectsAndCustomers.Models.Entities.ProjectEntity> // Make a list of the model


<h1>Projects</h1>
@* Button for opening the model which adds a project *@
<button id="addProjectBtn" onclick="openModal()">Add Project</button>>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Description</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Budget</th>

            <th>Customer Name</th>

            <th></th>


        </tr>
    </thead>
    <tbody>
        @foreach (var project in Model){ // Loop through the list to show all projects
            <tr>
                <td>@project.Id</td>
                <td>@project.Title</td>
                <td>@project.Description</td>
                <td>@project.StartDate</td>
                <td>@project.EndDate</td>
                <td>@project.Budget</td>

                <td>@project.Customer.CustomerName</td>
                <td>
                    <button class="btn btn-primary" onclick="editProduct(@project.Id)" data-project-id="@project.Id">Edit</button>
                </td>

            </tr>
        }
        

    </tbody>

</table>

@* <div id="modalContainer"></div> *@
<div id="modalWrapper">
    @* Inject form here *@
</div>

@* The reusable partial view that loads the modal, it sends the model to it, copilot helped me with the code for activating the modal. *@
@Html.Partial("_AddProjectModal", new ProjectsAndCustomers.Models.AddProjectViewModel())
@await Html.PartialAsync("_EditProjectModal", new ProjectsAndCustomers.Models.Entities.ProjectEntity())

@* Copilot helped me with ajax code for modals *@
<script>
    // Code for opening the add project modal
    function openModal() {
        $('#addProjectModal').modal('show'); 
    }
        $(function() {
        $('.editModal').modal();
    });
    // Code for opening the edit modal
    function editProduct(productId) {
        console.log("Product ID:", productId);
        $.ajax({
            url: '/Projects/Edit/' + productId,
            success: function(data) {
                $('#modalWrapper').html(data); // Injects the partial view
                $('#editProjectModal').modal('show'); // Activates the modal
            }
        });
    }
    // Code for sumbitting the edit modal
    $(document).on('submit', '#editProjectModal form', function(event) {
        event.preventDefault(); // Prevent default form submission
        let formData = $(this).serialize();

        $.ajax({
            type: 'POST',
            url: '/Projects/Edit',
            data: formData,
            success: function(response) {
                console.log('Edit successful!');
                $('#editProjectModal').modal('hide'); // Close the modal
                location.reload(); // Reload the page 
            },
            error: function(xhr, status, error) {
                console.error('Edit failed:', error);
            }
        });
    });


</script>





